{"remainingRequest":"C:\\Users\\XQ\\Desktop\\练习\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\XQ\\Desktop\\练习\\vue-element-admin\\src\\views\\example\\components\\ArticleDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\XQ\\Desktop\\练习\\vue-element-admin\\src\\views\\example\\components\\ArticleDetail.vue","mtime":1563851440902},{"path":"C:\\Users\\XQ\\Desktop\\练习\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\XQ\\Desktop\\练习\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\XQ\\Desktop\\练习\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\XQ\\Desktop\\练习\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport Tinymce from '@/components/Tinymce'\r\nimport Upload from '@/components/Upload/SingleImage3'\r\nimport MDinput from '@/components/MDinput'\r\nimport Sticky from '@/components/Sticky' // 粘性header组件\r\nimport { validURL } from '@/utils/validate'\r\nimport { fetchArticle } from '@/api/article'\r\nimport { searchUser } from '@/api/remote-search'\r\nimport Warning from './Warning'\r\nimport { CommentDropdown, PlatformDropdown, SourceUrlDropdown } from './Dropdown'\r\n\r\nconst defaultForm = {\r\n  status: 'draft',\r\n  title: '', // 文章题目\r\n  content: '', // 文章内容\r\n  content_short: '', // 文章摘要\r\n  source_uri: '', // 文章外链\r\n  image_uri: '', // 文章图片\r\n  display_time: undefined, // 前台展示时间\r\n  id: undefined,\r\n  platforms: ['a-platform'],\r\n  comment_disabled: false,\r\n  importance: 0\r\n}\r\n\r\nexport default {\r\n  name: 'ArticleDetail',\r\n  components: { Tinymce, MDinput, Upload, Sticky, Warning, CommentDropdown, PlatformDropdown, SourceUrlDropdown },\r\n  props: {\r\n    isEdit: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  data() {\r\n    const validateRequire = (rule, value, callback) => {\r\n      if (value === '') {\r\n        this.$message({\r\n          message: rule.field + '为必传项',\r\n          type: 'error'\r\n        })\r\n        callback(new Error(rule.field + '为必传项'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    const validateSourceUri = (rule, value, callback) => {\r\n      if (value) {\r\n        if (validURL(value)) {\r\n          callback()\r\n        } else {\r\n          this.$message({\r\n            message: '外链url填写不正确',\r\n            type: 'error'\r\n          })\r\n          callback(new Error('外链url填写不正确'))\r\n        }\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    return {\r\n      postForm: Object.assign({}, defaultForm),\r\n      loading: false,\r\n      userListOptions: [],\r\n      rules: {\r\n        image_uri: [{ validator: validateRequire }],\r\n        title: [{ validator: validateRequire }],\r\n        content: [{ validator: validateRequire }],\r\n        source_uri: [{ validator: validateSourceUri, trigger: 'blur' }]\r\n      },\r\n      tempRoute: {}\r\n    }\r\n  },\r\n  computed: {\r\n    contentShortLength() {\r\n      return this.postForm.content_short.length\r\n    },\r\n    displayTime: {\r\n      // set and get is useful when the data\r\n      // returned by the back end api is different from the front end\r\n      // back end return => \"2013-06-25 06:59:25\"\r\n      // front end need timestamp => 1372114765000\r\n      get() {\r\n        return (+new Date(this.postForm.display_time))\r\n      },\r\n      set(val) {\r\n        this.postForm.display_time = new Date(val)\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    if (this.isEdit) {\r\n      const id = this.$route.params && this.$route.params.id\r\n      this.fetchData(id)\r\n    } else {\r\n      this.postForm = Object.assign({}, defaultForm)\r\n    }\r\n\r\n    // Why need to make a copy of this.$route here?\r\n    // Because if you enter this page and quickly switch tag, may be in the execution of the setTagsViewTitle function, this.$route is no longer pointing to the current page\r\n    // https://github.com/PanJiaChen/vue-element-admin/issues/1221\r\n    this.tempRoute = Object.assign({}, this.$route)\r\n  },\r\n  methods: {\r\n    fetchData(id) {\r\n      fetchArticle(id).then(response => {\r\n        this.postForm = response.data\r\n\r\n        // just for test\r\n        this.postForm.title += `   Article Id:${this.postForm.id}`\r\n        this.postForm.content_short += `   Article Id:${this.postForm.id}`\r\n\r\n        // set tagsview title\r\n        this.setTagsViewTitle()\r\n\r\n        // set page title\r\n        this.setPageTitle()\r\n      }).catch(err => {\r\n        console.log(err)\r\n      })\r\n    },\r\n    setTagsViewTitle() {\r\n      const title = 'Edit Article'\r\n      const route = Object.assign({}, this.tempRoute, { title: `${title}-${this.postForm.id}` })\r\n      this.$store.dispatch('tagsView/updateVisitedView', route)\r\n    },\r\n    setPageTitle() {\r\n      const title = 'Edit Article'\r\n      document.title = `${title} - ${this.postForm.id}`\r\n    },\r\n    submitForm() {\r\n      console.log(this.postForm)\r\n      this.$refs.postForm.validate(valid => {\r\n        if (valid) {\r\n          this.loading = true\r\n          this.$notify({\r\n            title: '成功',\r\n            message: '发布文章成功',\r\n            type: 'success',\r\n            duration: 2000\r\n          })\r\n          this.postForm.status = 'published'\r\n          this.loading = false\r\n        } else {\r\n          console.log('error submit!!')\r\n          return false\r\n        }\r\n      })\r\n    },\r\n    draftForm() {\r\n      if (this.postForm.content.length === 0 || this.postForm.title.length === 0) {\r\n        this.$message({\r\n          message: '请填写必要的标题和内容',\r\n          type: 'warning'\r\n        })\r\n        return\r\n      }\r\n      this.$message({\r\n        message: '保存成功',\r\n        type: 'success',\r\n        showClose: true,\r\n        duration: 1000\r\n      })\r\n      this.postForm.status = 'draft'\r\n    },\r\n    getRemoteUserList(query) {\r\n      searchUser(query).then(response => {\r\n        if (!response.data.items) return\r\n        this.userListOptions = response.data.items.map(v => v.name)\r\n      })\r\n    }\r\n  }\r\n}\r\n",null]}